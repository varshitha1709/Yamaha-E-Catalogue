// Generated by view binder compiler. Do not edit!
package com.example.bikee_cataloguemobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bikee_cataloguemobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardusershowBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView imageshow;

  @NonNull
  public final ImageView imcall;

  @NonNull
  public final ImageView imloc;

  @NonNull
  public final TextView tvaddress;

  @NonNull
  public final TextView tvcity;

  @NonNull
  public final TextView tvdes;

  @NonNull
  public final TextView tvfname;

  @NonNull
  public final TextView tvowname;

  private CardusershowBinding(@NonNull CardView rootView, @NonNull ImageView imageshow,
      @NonNull ImageView imcall, @NonNull ImageView imloc, @NonNull TextView tvaddress,
      @NonNull TextView tvcity, @NonNull TextView tvdes, @NonNull TextView tvfname,
      @NonNull TextView tvowname) {
    this.rootView = rootView;
    this.imageshow = imageshow;
    this.imcall = imcall;
    this.imloc = imloc;
    this.tvaddress = tvaddress;
    this.tvcity = tvcity;
    this.tvdes = tvdes;
    this.tvfname = tvfname;
    this.tvowname = tvowname;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardusershowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardusershowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.cardusershow, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardusershowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageshow;
      ImageView imageshow = ViewBindings.findChildViewById(rootView, id);
      if (imageshow == null) {
        break missingId;
      }

      id = R.id.imcall;
      ImageView imcall = ViewBindings.findChildViewById(rootView, id);
      if (imcall == null) {
        break missingId;
      }

      id = R.id.imloc;
      ImageView imloc = ViewBindings.findChildViewById(rootView, id);
      if (imloc == null) {
        break missingId;
      }

      id = R.id.tvaddress;
      TextView tvaddress = ViewBindings.findChildViewById(rootView, id);
      if (tvaddress == null) {
        break missingId;
      }

      id = R.id.tvcity;
      TextView tvcity = ViewBindings.findChildViewById(rootView, id);
      if (tvcity == null) {
        break missingId;
      }

      id = R.id.tvdes;
      TextView tvdes = ViewBindings.findChildViewById(rootView, id);
      if (tvdes == null) {
        break missingId;
      }

      id = R.id.tvfname;
      TextView tvfname = ViewBindings.findChildViewById(rootView, id);
      if (tvfname == null) {
        break missingId;
      }

      id = R.id.tvowname;
      TextView tvowname = ViewBindings.findChildViewById(rootView, id);
      if (tvowname == null) {
        break missingId;
      }

      return new CardusershowBinding((CardView) rootView, imageshow, imcall, imloc, tvaddress,
          tvcity, tvdes, tvfname, tvowname);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
