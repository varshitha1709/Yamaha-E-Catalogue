// Generated by view binder compiler. Do not edit!
package com.example.bikee_cataloguemobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bikee_cataloguemobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout btnadminbike;

  @NonNull
  public final LinearLayout btnadminevent;

  @NonNull
  public final LinearLayout btnadminlogout;

  @NonNull
  public final LinearLayout btnadminquery;

  @NonNull
  public final LinearLayout btnadminuser;

  @NonNull
  public final LinearLayout linearshowrooms;

  @NonNull
  public final TextView textView;

  private ActivityAdminDashboardBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout btnadminbike, @NonNull LinearLayout btnadminevent,
      @NonNull LinearLayout btnadminlogout, @NonNull LinearLayout btnadminquery,
      @NonNull LinearLayout btnadminuser, @NonNull LinearLayout linearshowrooms,
      @NonNull TextView textView) {
    this.rootView = rootView;
    this.btnadminbike = btnadminbike;
    this.btnadminevent = btnadminevent;
    this.btnadminlogout = btnadminlogout;
    this.btnadminquery = btnadminquery;
    this.btnadminuser = btnadminuser;
    this.linearshowrooms = linearshowrooms;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnadminbike;
      LinearLayout btnadminbike = ViewBindings.findChildViewById(rootView, id);
      if (btnadminbike == null) {
        break missingId;
      }

      id = R.id.btnadminevent;
      LinearLayout btnadminevent = ViewBindings.findChildViewById(rootView, id);
      if (btnadminevent == null) {
        break missingId;
      }

      id = R.id.btnadminlogout;
      LinearLayout btnadminlogout = ViewBindings.findChildViewById(rootView, id);
      if (btnadminlogout == null) {
        break missingId;
      }

      id = R.id.btnadminquery;
      LinearLayout btnadminquery = ViewBindings.findChildViewById(rootView, id);
      if (btnadminquery == null) {
        break missingId;
      }

      id = R.id.btnadminuser;
      LinearLayout btnadminuser = ViewBindings.findChildViewById(rootView, id);
      if (btnadminuser == null) {
        break missingId;
      }

      id = R.id.linearshowrooms;
      LinearLayout linearshowrooms = ViewBindings.findChildViewById(rootView, id);
      if (linearshowrooms == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new ActivityAdminDashboardBinding((ConstraintLayout) rootView, btnadminbike,
          btnadminevent, btnadminlogout, btnadminquery, btnadminuser, linearshowrooms, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
